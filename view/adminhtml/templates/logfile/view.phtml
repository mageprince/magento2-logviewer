<?php
/**
 * MagePrince
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the mageprince.com license that is
 * available through the world-wide-web at this URL:
 * https://mageprince.com/end-user-license-agreement
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade this extension to newer
 * version in the future.
 *
 * @category    MagePrince
 * @package     Mageprince_Faq
 * @copyright   Copyright (c) MagePrince (https://mageprince.com/)
 * @license     https://mageprince.com/end-user-license-agreement
 */

use Mageprince\LogViewer\Block\LogFile;
use Magento\Framework\Escaper;

/**
 * @var LogFile $block
 * @var Escaper $escaper
 */
$logFile = $block->getFileName();
$displayLines = $block->getLinesToShowPerPageCount();
$logPath = BP . '/var/log/' . $logFile;
$previousLogUrl = $block->getLoadPreviousLogUrl();
?>
<div class="live-log-status" id="live-log-status" style="display: none; margin-bottom: 10px;">
    <span class="status-indicator"></span>
    <span class="status-text">
        <?= $escaper->escapeHtml(__('Live Log is active.')) ?>
    </span>
</div>
<div class="admin__page-section-item-content log-container">
    <button id="toggle-live-log"
            data-file="<?= $escaper->escapeHtmlAttr($logFile) ?>"
            class="action-secondary live-log-btn">
        <?= $escaper->escapeHtml(__('Start Live Log')) ?>
    </button>
    <button id="load-previous"
            data-file="<?= $escaper->escapeHtmlAttr($logFile) ?>"
            data-start="<?= $escaper->escapeHtmlAttr($displayLines)?>"
            data-display-lines="<?=$escaper->escapeHtmlAttr($displayLines)?>"
            class="action-primary">
        <?= $escaper->escapeHtml(__('Load Previous Logs')) ?>
    </button>
    <?php $message = __('Are you sure you want to delete %1 file content?', $logFile); ?>
    <?php if ($block->isDeleteAllowed()): ?>
        <a href="<?= $escaper->escapeHtmlAttr($block->getDeleteLogFile($logFile)) ?>" class="action-secondary delete"
           onclick="return confirm('<?= $escaper->escapeHtmlAttr($message) ?>');">
            <?= $escaper->escapeHtml(__('Delete File')) ?>
        </a>
    <?php endif; ?>
    <a href="<?= $escaper->escapeHtmlAttr($block->getUrl('logviewer/logfile/index')) ?>" class="action-secondary back">
        <?= $escaper->escapeHtml(__('Go Back')) ?>
    </a>
    <textarea id="log-output" rows="35"><?= /* @noEscape */  $block->tailFile($logPath, $displayLines) ?></textarea>
</div>
<script>
    require(['jquery'], function($) {
        $(document).ready(function () {
            let liveLogInterval = null;
            let lastLogSize = $('#log-output').val().length;
            let isLiveLogActive = false;
            $('#load-previous').on('click', function () {
                let $btn = $(this),
                    file = $btn.data('file'),
                    start = parseInt($btn.data('start')),
                    displayLines = parseInt($btn.data('display-lines')),
                    ajaxUrl = '<?= $escaper->escapeJs($previousLogUrl) ?>';

                $.ajax({
                    url: ajaxUrl,
                    showLoader: true,
                    data: {
                        file: file,
                        offset: start,
                        lines: displayLines,
                        form_key: FORM_KEY
                    },
                    success: function (res) {
                        if (res.success) {
                            if (res.data.trim()) {
                                $('#log-output').prepend(res.data + '\n');
                                $btn.data('start', start + displayLines);
                                lastLogSize = $('#log-output').val().length;
                            }

                            if (!res.has_more) {
                                $btn.prop('disabled', true);
                            }
                        }
                    }
                });
            });
            $('#toggle-live-log').on('click', function () {
                let $btn = $(this);
                if (isLiveLogActive) {
                    stopLiveLog($btn);
                } else {
                    startLiveLog($btn);
                }
            });
            function startLiveLog($btn) {
                isLiveLogActive = true;
                $btn.text('<?= $escaper->escapeJs(__('Stop Live Log')) ?>').addClass('active');
                $('#live-log-status').show().addClass('active');
                liveLogInterval = setInterval(function() {
                    checkForNewLogs();
                }, 3000);
            }
            function stopLiveLog($btn) {
                isLiveLogActive = false;
                $btn.text('<?= $escaper->escapeJs(__('Start Live Log')) ?>').removeClass('active');
                $('#live-log-status').hide().removeClass('active');
                if (liveLogInterval) {
                    clearInterval(liveLogInterval);
                    liveLogInterval = null;
                }
            }
            function checkForNewLogs() {
                let file = $('#toggle-live-log').data('file');
                let ajaxUrl = '<?= $escaper->escapeJs($block->getLiveLogUrl()) ?>';
                $.ajax({
                    url: ajaxUrl,
                    data: {
                        file: file,
                        last_size: lastLogSize,
                        form_key: FORM_KEY
                    },
                    success: function (res) {
                        if (res.success && res.new_content) {
                            let $textarea = $('#log-output');
                            let currentContent = $textarea.val();
                            let newContent = currentContent + res.new_content;
                            $textarea.val(newContent);
                            lastLogSize = newContent.length;
                            $textarea.scrollTop($textarea[0].scrollHeight);
                        }
                    },
                    error: function() {
                        stopLiveLog($('#toggle-live-log'));
                    }
                });
            }
            $(window).on('beforeunload', function() {
                if (liveLogInterval) {
                    clearInterval(liveLogInterval);
                }
            });
        });
    });
</script>
